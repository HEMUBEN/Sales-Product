(4) # Visualization Charts & Reports

<<<<<< Line chart With Monthly Sales Trend >>>>>>
print("Line chart With Monthly Sales Trend")
plt.figure(figsize=(10,5))
monthly_sales.plot(kind="bar", color="skyblue")
plt.title("Monthly Sales Trend")
plt.xlabel("Month")
plt.ylabel("Total Sales (₹)")
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# <<<<<< Pie Chart — Sales by Product Category >>>>>>
print("Pie Chart With Monthly Sales Trend")
category_sales = df.groupby("Product_Category")["Sales_Amount"].sum()
plt.figure(figsize=(6,6))
plt.pie(category_sales, labels=category_sales.index, autopct='%1.1f%%', startangle=140)
plt.title("Sales Distribution by Product Category")
plt.show()

# <<<<<< Bar Chart — Sales by Region >>>>>>
print("Bar Chart — Sales by Region")
region_sales = df.groupby("Region")["Sales_Amount"].sum().reset_index()
plt.figure(figsize=(8,5))
sns.barplot(x="Region", y="Sales_Amount", data=region_sales, palette="viridis")
plt.title("Total Sales by Region", fontsize=14)
plt.ylabel("Sales Amount (₹)")
plt.xlabel("Region")
plt.tight_layout()
plt.show()

# <<<<<< Histogram — Distribution of Sales Amount >>>>>>
print("Histogram — Distribution of Sales Amount")
plt.figure(figsize=(8,5))
sns.histplot(df["Sales_Amount"], bins=30, kde=True, color="teal")
plt.title("Distribution of Sales Amount", fontsize=14)
plt.xlabel("Sales Amount (₹)")
plt.ylabel("Frequency")
plt.tight_layout()
plt.show()

# <<<<<< Scatter Plot — Quantity vs Sales >>>>>>
print("Scatter Plot — Quantity vs Sales")
plt.figure(figsize=(8,5))
sns.scatterplot(x="Quantity", y="Sales_Amount", hue="Region", data=df)
plt.title("Quantity vs Sales Amount", fontsize=14)
plt.tight_layout()
plt.show()

# <<<<<< Combine Multiple Charts (optional) >>>>>>
fig, axs = plt.subplots(1, 2, figsize=(12,5))

# Bar chart - Sales by Region
sns.barplot(x="Region", y="Sales_Amount", data=region_sales, ax=axs[0], palette="magma")
axs[0].set_title("Sales by Region")

# Pie chart - Category Sales
axs[1].pie(category_sales, labels=category_sales.index, autopct='%1.1f%%', startangle=140)
axs[1].set_title("Category Contribution")

plt.tight_layout()
plt.show()



